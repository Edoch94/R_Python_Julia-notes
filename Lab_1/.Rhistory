mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference))
View(e)
e <- a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0))
e <- a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
e <- a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>%
show_query()
e <- as_tibble(a) %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>%
show_query()
e <- as_tibble(a) %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
# e <-
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>%
show_query()
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>% show_query()
tbl_memdb(a) %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>% show_query()
f <- tbl_memdb(a)
install.packages("dbplyr")
library(dbplyr)
f <- tbl_memdb(a)
install.packages("RSQLite")
library(RSQLite)
f <- tbl_memdb(a)
f %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>% show_query()
rm(list = ls())
library(tidyverse)
library(dbplyr)
library(RSQLite)
library(magrittr)
library(slider)
df <- structure(list(Date = c("01/01/2020", "02/01/2020", "03/01/2020","04/01/2020", "05/01/2020", "06/01/2020", "07/01/2020", "08/01/2020"),
VouchersEarned = c(10L, 8L, 4L, 2L, 1L, 0L, 0L, 0L),
VouchersRedeemed = c(0L, 9L, 4L, 4L, 4L, 1L, 1L, 0L),
ActualActive = c(10L, 9L, 9L, 7L, 3L, 2L, 0L, 0L),
ActualExpired = c(0L, 0L, 0L, 0L, 1L, 0L, 1L, 0L),
CumulativeEarned = c(10L, 18L, 22L, 24L, 25L, 25L, 25L, 25L),
CumulativeRedeemed = c(0L, 9L, 13L, 17L, 21L, 22L, 23L, 23L),
CumulativeDiff = c(10L, 9L, 9L, 7L, 4L, 3L, 2L, 2L)),
class = "data.frame", row.names = c(NA, -8L))
a <- df %>% select(Date, VouchersEarned, VouchersRedeemed)
b <- a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersAvailable = VouchersEarnedCumsum - coalesce(lag(VouchersEarned,3),0)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersDifference = VouchersAvailable - VouchersRedeemed)
d <- a %>%
mutate(VouchersRedeemed3Days = slide_dbl(VouchersRedeemed, sum, .before = 0, .after = 2)) %>%
# mutate(VouchersExpired = max(0, VouchersEarned - VouchersRedeemed3Days))
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersExpired =
VouchersEarned -
VouchersRedeemed3Days +
lag(VouchersEarnedCumsum, default = 0) -
lag(VouchersRedeemedCumsum, default = 0))
d %<>% relocate(VouchersExpired, .after = VouchersRedeemed3Days)
e <-
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
f <- tbl_memdb(a)
f %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>% show_query()
f <- tbl_memdb(a)
tbl_memdb(a) %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>% show_query()
df <- memdb_frame(x = runif(100), y = runif(100))
df %>% arrange(x) %>% show_query()
df <- structure(list(Date = c("01/01/2020", "02/01/2020", "03/01/2020","04/01/2020", "05/01/2020", "06/01/2020", "07/01/2020", "08/01/2020"),
VouchersEarned = c(10L, 8L, 4L, 2L, 1L, 0L, 0L, 0L),
VouchersRedeemed = c(0L, 9L, 4L, 4L, 4L, 1L, 1L, 0L),
ActualActive = c(10L, 9L, 9L, 7L, 3L, 2L, 0L, 0L),
ActualExpired = c(0L, 0L, 0L, 0L, 1L, 0L, 1L, 0L),
CumulativeEarned = c(10L, 18L, 22L, 24L, 25L, 25L, 25L, 25L),
CumulativeRedeemed = c(0L, 9L, 13L, 17L, 21L, 22L, 23L, 23L),
CumulativeDiff = c(10L, 9L, 9L, 7L, 4L, 3L, 2L, 2L)),
class = "data.frame", row.names = c(NA, -8L))
df2 <- memdb_frame(Date = df$Date,
VouchersEarned = df$VouchersEarned,
VouchersRedeemed = df$VouchersRedeemed)
df2 %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0)) %>% show_query()
e <-
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
View(e)
e <-
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifferenceNotNegative = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifferenceNotNegative =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifferenceNotNegative -
lag(VouchersCumsumDifferenceNotNegative, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
e <-
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference =
VouchersEarnedCumsum -
lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference =
case_when(VouchersCumsumDifference < 0 ~ 0,
T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers =
VouchersCumsumDifference -
lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
df_test <- data_frame()
df_test <- tibble()
df_test$VouchersEarned <- cut(runif(100, 0, 10))
df_test$VouchersEarned <- floor(runif(100, 0, 10))
df_test <- data.frame()
df_test$VouchersEarned <- floor(runif(100, 0, 10))
df_test <- tibble(VouchersEarned = floor(runif(100, 0, 10)))
View(df_test)
df_test %<>%
mutate(VouchersRedeemed = floor(runif(100, 0, 10)))
df_test %<>%
mutate(VouchersRedeemed = floor(runif(100, VouchersEarned, 10)))
View(df_test)
df_test <- tibble(VouchersEarned = floor(runif(100, 0, 10)))
df_test %<>%
mutate(VouchersRedeemed = floor(runif(100, 0, VouchersEarned)))
df_test %>% filter(VouchersRedeemed < VouchersEarned)
df_test %>% filter(VouchersRedeemed > VouchersEarned)
e <-
df_test %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference = VouchersEarnedCumsum - lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference = case_when(VouchersCumsumDifference < 0 ~ 0, T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers = VouchersCumsumDifference - lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
View(e)
df_test %<>% relocate(ExpiredVouchers, .after = VouchersRedeemed)
e %<>% relocate(ExpiredVouchers, .after = VouchersRedeemed)
View(e)
e <-
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference = VouchersEarnedCumsum - lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference = case_when(VouchersCumsumDifference < 0 ~ 0, T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers = VouchersCumsumDifference - lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
e
e
e
e <- as.tibble(e)
e <- as_tibble(e)
e
e <-
df_test %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersCumsumDifference = VouchersEarnedCumsum - lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference = case_when(VouchersCumsumDifference < 0 ~ 0, T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers = VouchersCumsumDifference - lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
e %<>% relocate(ExpiredVouchers, .after = VouchersRedeemed)
e <-
df_test %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
mutate(VouchersAvailable = VouchersEarnedCumsum - coalesce(lag(VouchersEarned,3),0)) %>%
mutate(VouchersCumsumDifference = VouchersEarnedCumsum - lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference = case_when(VouchersCumsumDifference < 0 ~ 0, T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers = VouchersCumsumDifference - lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
e %<>% relocate(ExpiredVouchers, .after = VouchersRedeemed)
e <-
a %>%
mutate(VouchersEarnedCumsum = cumsum(VouchersEarned)) %>%
mutate(VouchersRedeemedCumsum = cumsum(VouchersRedeemed)) %>%
# mutate(VouchersAvailable = VouchersEarnedCumsum - coalesce(lag(VouchersEarned,3),0)) %>%
mutate(VouchersCumsumDifference = VouchersEarnedCumsum - lead(VouchersRedeemedCumsum,2,default = max(VouchersRedeemedCumsum))) %>%
mutate(VouchersCumsumDifference = as.numeric(VouchersCumsumDifference)) %>%
mutate(VouchersCumsumDifference = case_when(VouchersCumsumDifference < 0 ~ 0, T ~ VouchersCumsumDifference)) %>%
mutate(ExpiredVouchers = VouchersCumsumDifference - lag(VouchersCumsumDifference, default = 0)) %>%
mutate(ExpiredVouchersInDate = lag(ExpiredVouchers,3,default = 0))
e %<>% relocate(ExpiredVouchers, .after = VouchersRedeemed)
rm(list = ls())
setwd(file.path("D:","Documenti","RAM_PHM","RAM_PHM_course","Lab_1"))
dir.exists(file.path("D:","Documenti","RAM_PHM","RAM_PHM_course","Lab_1"))
rm(list = ls())
setwd(file.path("D:","Documenti","RAM_PHM","RAM_PHM_course","Lab_1"))
library(tidyverse)
TM = 10^3
l<- 3*10^(-3)
mu <- 25*10^(-3)
DT = 1
Time_axis = seq(0,TM,by=DT)
counter_q = rep_along(Time_axis, 0)
unrel <- matrix(data = rep(0), nrow = M, ncol = length(Time_axis))
M <- 10^5
unrel <- matrix(data = rep(0), nrow = M, ncol = length(Time_axis))
View(unrel)
rm(list = ls())
setwd(file.path("D:","Documenti","RAM_PHM","RAM_PHM_course","Lab_1"))
library(tidyverse)
TM <- 10^3
M <- 10^5
l <- 3*10^(-3)
mu <- 25*10^(-3)
DT = 1
Time_axis = seq(0,TM,by=DT)
counter_q = rep_along(Time_axis, 0)
unrel <- matrix(data = rep(0), nrow = M, ncol = length(Time_axis))
for(i in 1:M){
t = 0
unrel_flag = 0
state = 0
while (t < TM) {
if(state == 0){
t = t+rexp(1,l)
failure_time = t
if(failure_time < TM && unrel_flag == 0){
unrel_flag = 1
unrel[i,ceiling(t)] = 1
}
state = 1
start_F = ceiling(failure_time)
}
else{
t = t+rexp(1,mu)
state = 0
repair_time = t
if(t < TM){
end_F <- ceiling(repair_time)
}
else{
end_F <- length(Time_axis)
}
unrel[i,start_F:enf_F] <- 1
}
}
}
for(i in 1:M){
t = 0
unrel_flag = 0
state = 0
start_F = 0
end_F = 0
while (t < TM) {
if(state == 0){
t = t+rexp(1,l)
failure_time = t
if(failure_time < TM && unrel_flag == 0){
unrel_flag = 1
unrel[i,ceiling(t)] = 1
}
state = 1
start_F = ceiling(failure_time)
}
else{
t = t+rexp(1,mu)
state = 0
repair_time = t
if(t < TM){
end_F <- ceiling(repair_time)
}
else{
end_F <- length(Time_axis)
}
unrel[i,start_F:enf_F] <- 1
}
}
}
for(i in 1:M){
t = 0
unrel_flag = 0
state = 0
# start_F = 0
# end_F = 0
while (t < TM) {
if(state == 0){
t = t+rexp(1,l)
failure_time = t
if(failure_time < TM && unrel_flag == 0){
unrel_flag = 1
unrel[i,ceiling(t)] = 1
}
state = 1
start_F = ceiling(failure_time)
}
else{
t = t+rexp(1,mu)
state = 0
repair_time = t
if(t < TM){
end_F <- ceiling(repair_time)
}
else{
end_F <- length(Time_axis)
}
unrel[i,start_F:end_F] <- 1
}
}
}
View(unrel)
source('~/RAM_PHM/RAM_PHM_course/Lab_1/Exercise_2.R')
View(unrel)
source('~/RAM_PHM/RAM_PHM_course/Lab_1/Exercise_2.R')
a <- rep.int(0, times = ncol(unrel))
a
for(i in ncol(unrel)) {
a[i] <- mean(unrel[,i])
}
a
source('~/RAM_PHM/RAM_PHM_course/Lab_1/Exercise_2.R')
source('~/RAM_PHM/RAM_PHM_course/Lab_1/Exercise_2.R')
source('~/RAM_PHM/RAM_PHM_course/Lab_1/Exercise_2.R')
rm(list = ls())
source('~/RAM_PHM/RAM_PHM_course/Lab_1/Exercise_2.R')
a
